{"version":3,"sources":["apiConfig.js","cart/cartAPI.js","coffee/components/Coffee.js","coffee/components/Coffees.js","coffee/coffeeAPI.js","machine/components/machine.js","machine/components/machines.js","machine/machineAPI.js","tool/components/tool.js","tool/components/tools.js","tool/tollAPI.js","Home.js","cart/components/Cart.js","cart/components/Carts.js","App.js","serviceWorker.js","index.js"],"names":["apiUrls","development","producition","apiURL","window","location","hostname","deleteAll","console","log","axios","delete","apiUrl","deleteItemByID","id","addToCart","cartItem","post","itemId","totalprice","name","price","amount","img","Coffee","addToCartCoffee","event","preventDefault","props","ItemExist","carts","forEach","item","alert","then","res","newCartList","push","data","cart","setCarts","catch","error","Card","style","width","Img","variant","src","this","Body","Title","Text","description","Button","onClick","React","Component","Coffees","get","response","setCoffees","coffee","allCoffees","coffees","length","map","index","type","_id","key","Container","CardDeck","Machine","addToCartMachine","Machines","setMachines","machine","allmachine","machines","Tool","addToCartTool","setTools","tool","allTools","tools","Home","setState","state","className","Cart","deleteItem","deleteOne","decreseAmount","newamount","newTotalprice","incresAmount","saveChange","patch","updateAmount","sumAllTotal","ListGroup","horizontal","Item","href","class","Carts","deleteAllCart","componentDidMount","filter","totalAllProduct","element","allCarts","App","marginBottom","to","exact","path","component","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.894a2d1d.chunk.js","sourcesContent":["\r\nlet apiURL ;\r\nconst expressPort = 5000 ;\r\nconst apiUrls = {\r\n    development :`http://localhost:${expressPort}/api`,\r\n    producition : `https://secret-cove-13183.herokuapp.com/api`\r\n}\r\n\r\nif (window.location.hostname === 'localhost'){\r\n    apiURL = apiUrls.development;\r\n}\r\nelse {\r\n    apiURL = apiUrls.producition;\r\n}\r\n\r\nexport default apiURL ;","import apiUrl from '../apiConfig';\r\nimport axios from 'axios';\r\n\r\n\r\n// Index , show , create ,update  , destroy\r\n\r\n// get all items  in cart\r\nexport const getAllcart = () => {\r\n\r\n\r\n    return   axios.get(`${apiUrl}/cart`)\r\n  \r\n};\r\n// delele all items from cart\r\nexport const deleteAll = () => {\r\n    console.log(\" inside axios\")\r\nreturn   axios.delete(`${apiUrl}/cart`)\r\n\r\n};\r\n// delete one item from cart\r\nexport const deleteItemByID = (id)=> {\r\n    return axios.delete(`${apiUrl}/cart/${id}`);\r\n  };\r\n\r\n// add one item to cart \r\nexport const addToCart= (cartItem) =>{\r\n    console.log(\"this is the add to cart function work \");\r\n    return axios.post(`${apiUrl}/cart` , \r\n        {\r\n            \"cart\":{\r\n             \"itemId\" : cartItem.itemId ,\r\n             \"totalprice\" :cartItem.totalprice ,\r\n              \"name\": cartItem.name,\r\n             \"price\": cartItem.price, \r\n             \"amount\" : cartItem.amount ,\r\n            \"img\": cartItem.img\r\n            } \r\n       }\r\n    )\r\n    \r\n}\r\n\r\n// update the amount and total price of the item\r\nexport const updateAmount= (cartItem , id ) =>{\r\n    console.log(\"this is the add to cart function work \");\r\n    return axios.patch(`${apiUrl}/cart/${id}` , \r\n        {\r\n            \"cart\":{\r\n             \"itemId\" : cartItem.itemId ,\r\n             \"totalprice\" : cartItem.totalprice ,\r\n              \"name\": cartItem.name,\r\n             \"price\": cartItem.price, \r\n             \"amount\" : cartItem.amount ,\r\n            \"img\": cartItem.img\r\n            } \r\n       }\r\n    )\r\n    \r\n}\r\n","import React from 'react';\r\nimport {addToCart} from '../../cart/cartAPI';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nexport default class Coffee extends React.Component{\r\n\r\n // call back cart API to add item to cart array\r\n   addToCartCoffee = (event)=>{\r\n    event.preventDefault();\r\n\r\n    let cartItem ={\r\n      itemId : this.props.id ,\r\n      totalprice: this.props.price ,\r\n       name: this.props.name,\r\n      price: this.props.price, \r\n      amount : 1 ,\r\n     img: this.props.img\r\n     } \r\n\r\n     let ItemExist=false;\r\n\r\n     this.props.carts.forEach((item)=>{\r\n       if(item.name === this.props.name ){\r\n         console.log(\"ItemExist\");\r\n        ItemExist= true;\r\n  \r\n     }\r\n    \r\n     });\r\n\r\n\r\n    if(ItemExist){\r\n      console.log(ItemExist);\r\n      console.log(\"ItemExist\");\r\n      alert(\"You can not add this item , it is already exist in thr Cart\")\r\n\r\n    }else{\r\n      console.log(ItemExist);\r\n      console.log(\"ItemNotExist\");\r\n      addToCart(cartItem) \r\n      .then ((res)=>{\r\n          console.log(\"Item has been Added\");\r\n          const  newCartList = this.props.carts;\r\n          newCartList.push(res.data.cart);\r\n          console.log(res.data.cart)\r\n          this.props.setCarts(newCartList)\r\n          \r\n  \r\n      })\r\n      .catch((error) =>{\r\n          console.log('API error' , error)\r\n      })\r\n    }\r\n    }\r\n\r\n \r\n  render(){\r\n\r\n  return(<Card style={{ width: '18rem' }}>\r\n  <Card.Img variant=\"top\" src={this.props.img} />\r\n  <Card.Body>\r\n    <Card.Title>{this.props.name}</Card.Title>\r\n    <Card.Text>\r\n    {this.props.description} \r\n    </Card.Text>\r\n    <Card.Text>\r\n    {this.props.price} RAL\r\n    </Card.Text>\r\n    </Card.Body>\r\n    <Button variant=\"primary\" onClick={this.addToCartCoffee}>ADD TO CART</Button>\r\n\r\n</Card>\r\n\r\n  )\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Coffee from './Coffee'\r\nimport {getAllcoffee} from '../coffeeAPI'; \r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nexport default class Coffees extends React.Component{\r\n    componentDidMount(){\r\n        // call axios API to get all machine \r\n        getAllcoffee() \r\n        .then ((response)=>{\r\n            // send the response to machine array \r\n            this.props.setCoffees(response.data.coffee)\r\n        })\r\n        .catch((error) =>{\r\n            console.log('API error' , error)\r\n        })\r\n    }\r\nrender(){\r\n    let allCoffees = <h4> No coffee item </h4>\r\n     // check if tool array have item to create machine \r\n     if(this.props.coffees.length > 0){\r\n        allCoffees = this.props.coffees.map((item , index ) => {\r\n        return <Coffee name={item.name} \r\n        description={item.description}\r\n        type={item.type}\r\n        price={item.price}\r\n        img={item.img}\r\n        setCarts={this.props.setCarts}\r\n        carts={this.props.carts}\r\n        id={item._id}\r\n        key={index}\r\n        />\r\n    })\r\n     }\r\n\r\n  return( <div>\r\n<h3> All Coffees </h3>\r\n<Container>\r\n<CardDeck>\r\n{allCoffees}\r\n</CardDeck>\r\n</Container>\r\n</div>\r\n  )\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n","import apiUrl from '../apiConfig';\r\nimport axios from 'axios';\r\nimport {} from '../cart/cartAPI'\r\n\r\n// Index \r\n\r\n// get all coffee \r\nexport const getAllcoffee = () => {\r\n           console.log(\" inside axios\")\r\n    return   axios.get(`${apiUrl}/coffee`)\r\n  \r\n};\r\n\r\n","import React from 'react';\r\nimport {addToCart} from '../../cart/cartAPI';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class Machine extends React.Component{\r\n  // call back cart API to add item to cart array\r\n  addToCartMachine = (event)=>{\r\n    event.preventDefault();\r\n\r\n    let cartItem ={\r\n      itemId : this.props.id ,\r\n      totalprice: this.props.price,\r\n       name: this.props.name,\r\n      price: this.props.price, \r\n      amount :  1,\r\n     img: this.props.img\r\n     } \r\n    \r\n\r\n     let ItemExist=false;\r\n\r\n     this.props.carts.forEach((item)=>{\r\n       if(item.name === this.props.name ){\r\n         console.log(\"ItemExist\");\r\n        ItemExist= true;\r\n  \r\n     }\r\n    \r\n     });\r\n\r\n\r\n    if(ItemExist){\r\n      console.log(ItemExist);\r\n      console.log(\"ItemExist\");\r\n      alert(\"You can not add this item , it is already exist in thr Cart\")\r\n\r\n    }else{\r\n      console.log(ItemExist);\r\n      console.log(\"ItemNotExist\");\r\n      addToCart(cartItem) \r\n      .then ((res)=>{\r\n          console.log(\"Item has been Added\");\r\n          const  newCartList = this.props.carts;\r\n          newCartList.push(res.data.cart);\r\n          console.log(res.data.cart)\r\n          this.props.setCarts(newCartList)\r\n          \r\n  \r\n      })\r\n      .catch((error) =>{\r\n          console.log('API error' , error)\r\n      })\r\n    }\r\n    }\r\n\r\n  render(){\r\n\r\n\r\n  return( \r\n\r\n    \r\n       <Card style={{ width: '10rem' }}>\r\n  <Card.Img variant=\"top\" src={this.props.img} />\r\n  <Card.Body>\r\n    <Card.Title>{this.props.name}</Card.Title>\r\n    <Card.Text>\r\n    {this.props.description} \r\n    </Card.Text>\r\n    <Card.Text>\r\n    {this.props.price} RAL\r\n    </Card.Text>\r\n    </Card.Body>\r\n    <Button variant=\"primary\" onClick={this.addToCartMachine}>ADD TO CART</Button>\r\n  \r\n</Card>\r\n\r\n  )\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Machine from './machine'\r\nimport { getAllmachine} from '../machineAPI'; \r\nimport Container from 'react-bootstrap/Container';\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\n\r\n\r\n\r\n\r\n\r\nexport default class Machines extends React.Component{\r\n   \r\n    componentDidMount(){\r\n      // call axios API to get all machine \r\n        getAllmachine() \r\n        .then ((response)=>{\r\n             // send the response to machine array \r\n            this.props.setMachines(response.data.machine)\r\n\r\n        })\r\n        .catch((error) =>{\r\n            console.log('API error' , error)\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\nrender(){\r\n       \r\n    let allmachine = <h4> No machine item </h4>\r\n // check if tool array have item to create machine \r\n     if(this.props.machines.length > 0){\r\n        allmachine = this.props.machines.map((item , index ) => {\r\n        return <Machine name={item.name} \r\n        description={item.description}\r\n        type={item.type}\r\n        price={item.price}\r\n        img={item.img}\r\n        setCarts={this.props.setCarts}\r\n        carts={this.props.carts}\r\n        id={item._id}\r\n        key={index}\r\n        />\r\n    })\r\n\r\n     }\r\n\r\n    \r\n     \r\n    \r\n  return( <div>\r\n<h3> All Machine </h3>\r\n<Container>\r\n<CardDeck>\r\n{allmachine}\r\n</CardDeck>\r\n</Container>\r\n\r\n</div>\r\n  )\r\n}\r\n\r\n\r\n}\r\n","import apiUrl from '../apiConfig';\r\nimport axios from 'axios';\r\n\r\n\r\n// Index \r\n\r\n// get all mashines \r\nexport const getAllmachine = () => {\r\n           console.log(\" inside axios\")\r\n    return   axios.get(`${apiUrl}/machine`)\r\n  \r\n};","import React from 'react';\r\nimport {addToCart} from '../../cart/cartAPI';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class Tool extends React.Component{\r\n    // call back cart API to add item to cart array\r\n  addToCartTool = (event)=>{\r\n    event.preventDefault();\r\n    let cartItem ={\r\n      itemId : this.props.id ,\r\n      totalprice: this.props.price ,\r\n       name: this.props.name,\r\n      price: this.props.price, \r\n      amount : 1 ,\r\n     img: this.props.img\r\n     } \r\n    \r\n     let ItemExist=false;\r\n\r\n     this.props.carts.forEach((item)=>{\r\n       if(item.name === this.props.name ){\r\n         console.log(\"ItemExist\");\r\n        ItemExist= true;\r\n  \r\n     }\r\n    \r\n     });\r\n\r\n     \r\n    if(ItemExist){\r\n      console.log(ItemExist);\r\n      console.log(\"ItemExist\");\r\n      alert(\"You can not add this item , it is already exist in thr Cart\")\r\n\r\n    }else{\r\n      console.log(ItemExist);\r\n      console.log(\"ItemNotExist\");\r\n      addToCart(cartItem) \r\n      .then ((res)=>{\r\n          console.log(\"Item has been Added\");\r\n          const  newCartList = this.props.carts;\r\n          newCartList.push(res.data.cart);\r\n          console.log(res.data.cart)\r\n          this.props.setCarts(newCartList)\r\n          \r\n  \r\n      })\r\n      .catch((error) =>{\r\n          console.log('API error' , error)\r\n      })\r\n    }\r\n    }\r\n  render(){\r\n\r\n\r\n  return(<Card style={{ width: '18rem' }}>\r\n  <Card.Img variant=\"top\" src={this.props.img} />\r\n  <Card.Body>\r\n    <Card.Title>{this.props.name}</Card.Title>\r\n    <Card.Text>\r\n    {this.props.description} \r\n    </Card.Text>\r\n    <Card.Text>\r\n    {this.props.price} RAL\r\n    </Card.Text>\r\n    </Card.Body>\r\n    <Button variant=\"primary\" onClick={this.addToCartTool}>ADD TO CART</Button>\r\n\r\n</Card>\r\n\r\n\r\n  )\r\n}\r\n\r\n\r\n}","import React from 'react';\r\nimport Tool from './tool'\r\nimport {getAlltool} from '../tollAPI'; \r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nexport default class Coffees extends React.Component{\r\n   \r\n    componentDidMount(){\r\n         // call axios API to get all tool \r\n        getAlltool() \r\n        .then ((response)=>{\r\n            // send the response to tool array \r\n            this.props.setTools(response.data.tool)\r\n        })\r\n        .catch((error) =>{\r\n            console.log('API error' , error)\r\n        })\r\n\r\n    }\r\n\r\nrender(){\r\n       \r\n    let allTools = <h4> No tool item </h4>\r\n           // check if tool array have item to create tool \r\n     if(this.props.tools.length > 0){\r\n        allTools = this.props.tools.map((item , index ) => {\r\n        return <Tool name={item.name} \r\n        description={item.description}\r\n        type={item.type}\r\n        price={item.price}\r\n        img={item.img}\r\n        setCarts={this.props.setCarts}\r\n        carts={this.props.carts}\r\n        id={item._id}\r\n        key={index}\r\n        />\r\n    })\r\n\r\n     }\r\n    \r\n  return( <div>\r\n<h3> All Tools </h3>\r\n<Container>\r\n<CardDeck>\r\n{allTools}\r\n</CardDeck>\r\n</Container>\r\n</div>\r\n  )\r\n}\r\n\r\n}\r\n\r\n","import apiUrl from '../apiConfig';\r\nimport axios from 'axios';\r\n\r\n\r\n// Index \r\n\r\n// get all tools \r\nexport const getAlltool = () => {\r\n           console.log(\" inside axios\")\r\n    return   axios.get(`${apiUrl}/tool`)\r\n  \r\n};","import React from 'react';\r\nimport './App.css';\r\nimport Coffees from './coffee/components/Coffees'\r\nimport Machines from './machine/components/machines'\r\nimport Tools from './tool/components/tools'\r\nimport apiURL from './apiConfig';\r\n\r\n\r\nexport default class Home extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n       coffees : [],\r\n       machines:[],\r\n       tools:[],\r\n       carts:[],\r\n    }\r\n\r\n    console.log(' MY API URL ', apiURL)\r\n  }\r\n// to enable to change coffee array \r\n  setCoffees = (coffees) => {\r\n    this.setState({\r\n      coffees : coffees\r\n    })\r\n  }\r\n  // to enable to machine cart array \r\n  setMachines = (machines) => {\r\n    this.setState({\r\n      machines:machines\r\n    })\r\n  }\r\n  // to enable to change tool array \r\n  setTools = (tools) => {\r\n    this.setState({\r\n      tools : tools\r\n    })\r\n  }\r\n  // to enable to change cart array \r\n  setCarts = (carts) => {\r\n    this.setState({\r\n      carts : carts\r\n    })\r\n  }\r\n  render(){\r\n  return(\r\n<div className=\"App\">\r\n  \r\n  <Coffees  coffees={this.state.coffees} \r\n  setCoffees={this.setCoffees}\r\n  setCarts={this.setCarts}\r\n  carts={this.state.carts}\r\n   />\r\n\r\n  <Machines  machines={this.state.machines} \r\n  setMachines={this.setMachines}\r\n   setCarts={this.setCarts}\r\n   carts={this.state.carts}\r\n   />\r\n\r\n  <Tools  tools={this.state.tools} \r\n  setTools={this.setTools} \r\n  setCarts={this.setCarts}\r\n  carts={this.state.carts}\r\n  />\r\n  </div>\r\n\r\n  )\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n","\r\nimport React from \"react\";\r\nimport { updateAmount } from \"../cartAPI\";\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nexport default class Cart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      amount: this.props.amount,\r\n      totalprice: this.props.totalprice\r\n    };\r\n  }\r\n   // delete one item from cart\r\n  deleteItem = event => {\r\n    event.preventDefault();\r\n    this.props.deleteOne(this.props.id);\r\n  };\r\n// decrese amount of the item \r\n  decreseAmount = () => {\r\n    if (this.state.amount > 0) {\r\n      let newamount = this.state.amount;\r\n      let newTotalprice = this.state.totalprice;\r\n      newTotalprice = newTotalprice - this.props.price;\r\n      newamount = newamount - 1;\r\n      this.setState({\r\n        amount: newamount,\r\n        totalprice: newTotalprice\r\n      });\r\n    }\r\n  };\r\n\r\n//  incres amount of the item \r\n  incresAmount = () => {\r\n    let newamount = this.state.amount;\r\n    let newTotalprice = this.state.totalprice;\r\n    newamount = newamount + 1;\r\n    newTotalprice = newTotalprice + this.props.price;\r\n\r\n    this.setState({\r\n      amount: newamount,\r\n      totalprice: newTotalprice\r\n    });\r\n\r\n    \r\n  \r\n  };\r\n\r\n  // to save the changed amount \r\n  saveChange = event => {\r\n    event.preventDefault();\r\n    let cartItem = {\r\n      itemId: this.props.id,\r\n      totalprice: this.state.totalprice,\r\n      name: this.props.name,\r\n      price: this.props.price,\r\n      amount: this.state.amount,\r\n      img: this.props.img\r\n    };\r\n    updateAmount(cartItem, this.props.id)\r\n      .then(response => {\r\n        this.props.sumAllTotal();\r\n      })\r\n      .catch(error => {\r\n        console.log(\"API ERROR:\", error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n\r\n  <div className=\"cart\">\r\n        <ListGroup horizontal >\r\n  <ListGroup.Item >{this.props.name}</ListGroup.Item>\r\n  <ListGroup.Item>{this.props.price} </ListGroup.Item>\r\n  <ListGroup.Item><button onClick={this.decreseAmount}> - </button></ListGroup.Item>\r\n  <ListGroup.Item>{this.state.amount}</ListGroup.Item>\r\n  <ListGroup.Item><button onClick={this.incresAmount}> + </button> </ListGroup.Item>\r\n  <ListGroup.Item>{this.state.totalprice} </ListGroup.Item>\r\n  <ListGroup.Item> <a href=\"#\" onClick={this.saveChange}><i class=\"material-icons\">\r\nsave_alt\r\n</i></a></ListGroup.Item>\r\n  <ListGroup.Item><Button variant=\"danger\"  onClick={this.deleteItem}><i class=\"material-icons\">\r\ndelete_forever\r\n</i></Button> </ListGroup.Item>\r\n</ListGroup>\r\n</div>\r\n\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport Cart from './Cart'\r\nimport {getAllcart, deleteAll, deleteItemByID } from '../cartAPI'; \r\nimport Container from 'react-bootstrap/Container';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\n\r\nexport default class Carts extends React.Component{\r\n    componentDidMount(){\r\n      // call axios API to get all items in cart \r\n        getAllcart() \r\n        .then ((response)=>{\r\n          // send the response to cart array \r\n            this.props.setCarts(response.data.cart)\r\n        })\r\n        .catch((error) =>{\r\n            console.log('API error' , error)\r\n        })\r\n    }\r\n\r\n    // delete all items in cart\r\n    deleteAllCart =(event)=>{\r\n        event.preventDefault();\r\n        deleteAll()\r\n        .then ((response)=>{\r\n        this.componentDidMount()\r\n        })\r\n        .catch((error) =>{\r\n            console.log('API error' , error)\r\n        })\r\n     }\r\n\r\n     // delete one item from the cart\r\n     deleteOne = (id) => {\r\n        console.log('The item ID to Delete', id);\r\n        deleteItemByID(id)\r\n          .then((response) => {\r\n            console.log(`The item with the ID ${id} has been deleted.`);\r\n            const newCartList = this.props.carts.filter((item) => {\r\n              return item._id !== id;\r\n            });\r\n            this.props.setCarts(newCartList);\r\n          })\r\n          .catch((error) => {\r\n            console.log('API ERROR:', error);\r\n          });\r\n      }\r\n\r\n      // calculite all items price that on the cart\r\n  sumAllTotal = () => {\r\n    this.componentDidMount()\r\n    let totalAllProduct = 0 ;\r\n    if (this.props.carts.length > 0){\r\n      let newArray = this.props.carts.filter((element) => {\r\n               return totalAllProduct += element.totalprice\r\n      })\r\n      return totalAllProduct\r\n   }\r\n  }\r\nrender(){\r\n\r\n    let allCarts = <h4> No Carts item </h4>\r\n    // check if cart array have item to create item in cart \r\n     if(this.props.carts.length > 0){\r\n        allCarts = this.props.carts.map((item , index ) => {\r\n        return <Cart name={item.name} \r\n        price={item.price}\r\n        img={item.img}\r\n        amount={item.amount}\r\n        totalprice={item.totalprice}\r\n        deleteOne={this.deleteOne}\r\n        setCarts={this.props.setCarts}\r\n        itemId={item.itemId}\r\n        id={item._id}\r\n        key={index}\r\n        setCarts={this.props.setCarts}\r\n        carts = {this.props.carts}\r\n        sumAllTotal={this.sumAllTotal}\r\n        />\r\n    })\r\n     }\r\n  return( <div>\r\n<h3> All Carts </h3>\r\n<a href=\"#\" onClick={this.deleteAllCart}>Delete All</a>\r\n\r\n<Container>\r\n<div className=\"cart\">\r\n<ListGroup horizontal>\r\n  <ListGroup.Item >Name</ListGroup.Item>\r\n  <ListGroup.Item> Price</ListGroup.Item>\r\n  <ListGroup.Item> Subs </ListGroup.Item>\r\n  <ListGroup.Item>Amount</ListGroup.Item>\r\n  <ListGroup.Item>Add</ListGroup.Item>\r\n  <ListGroup.Item>Total price </ListGroup.Item>\r\n  <ListGroup.Item >Save changes</ListGroup.Item>\r\n  <ListGroup.Item >Delete</ListGroup.Item>\r\n</ListGroup>\r\n</div>\r\n{allCarts}\r\n</Container>  \r\n<h4> The Total </h4>\r\n{this.sumAllTotal()}\r\n</div>\r\n  )\r\n}\r\n}","\r\nimport React from 'react';\r\nimport './App.css';\r\nimport Home from './Home'\r\nimport Carts from './cart/components/Carts'\r\nimport apiURL from './apiConfig';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\n\r\nexport default class App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n       carts:[],\r\n    }\r\n    console.log(' MY API URL ', apiURL)\r\n  }\r\n// to enable to change cart array \r\n  setCarts = (carts) => {\r\n    this.setState({\r\n      carts : carts\r\n    })\r\n  }\r\n  render(){\r\n  return(\r\n<div className=\"App\">\r\n  {/* nav */}\r\n    <Router>\r\n    <div className=\"jumbotron\" style={{marginBottom: 0+'em'}}>\r\n    <h1>Coffee Store</h1>\r\n    <p>When you can find every thing you need</p>\r\n  </div>\r\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n      <span class=\"navbar-text\">Coffee Store</span>\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item dropdown\">\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\"> <Link to=\"/\">Go to Home Page</Link></a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\"><Link to=\"/Carts\">Carts</Link></a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n      <div>\r\n        <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/cart/components/Carts\" component={Carts} />\r\n        { <Carts  carts={this.state.carts} \r\n  setCarts={this.setCarts}/> }\r\n      </Switch>\r\n      </div>\r\n    </Router>\r\n  </div>\r\n\r\n  )\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}